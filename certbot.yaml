---
- name: Setup Certbot for SSL
  hosts: web_sites
  become: yes
  vars:
    domain: domain.name.org
    wordpress_install_dir: /var/www/html/web-site1
    wordpress_admin_email: email@email.com
    php_version: "8.2"

  pre_tasks:
    - name: Ensure services are enabled to start at boot
      service:
        name: "{{ item }}"
        enabled: yes
      loop:
        - nginx
        - mariadb
        - "php{{ php_version }}-fpm"

  tasks:
    - name: Ensure FastCGI configuration is present
      template:
        src: templates/fastcgi_params.j2
        dest: /etc/nginx/fastcgi_params
      notify: Reload Nginx

    - name: Ensure fastcgi-php.conf snippet for Nginx exists
      template:
        src: templates/fastcgi-php.conf.j2
        dest: /etc/nginx/snippets/fastcgi-php.conf
      notify: Reload Nginx

    - name: Create Let's Encrypt directory
      file:
        path: /etc/letsencrypt
        state: directory
        mode: '0755'
        owner: root
        group: root

    - name: Ensure Let's Encrypt SSL options file exists
      template:
        src: templates/options-ssl-nginx.conf.j2
        dest: /etc/letsencrypt/options-ssl-nginx.conf

    - name: Ensure dhparams.pem file exists
      command: openssl dhparam -out /etc/letsencrypt/ssl-dhparams.pem 2048
      args:
        creates: /etc/letsencrypt/ssl-dhparams.pem

    - name: Clear all previously created certificates
      file:
        path: /etc/letsencrypt/live
        state: absent
      ignore_errors: yes

    - name: Create Let's Encrypt live directory structure
      file:
        path: /etc/letsencrypt/live/{{ domain }}
        state: directory
        mode: '0755'
        owner: root
        group: root

    - name: Generate self-signed certificate
      command: >
        openssl req -x509 -nodes -days 1 -newkey rsa:2048
        -keyout /etc/letsencrypt/live/{{ domain }}/privkey.pem
        -out /etc/letsencrypt/live/{{ domain }}/fullchain.pem
        -subj "/CN={{ domain }}"
      args:
        creates: /etc/letsencrypt/live/{{ domain }}/fullchain.pem

    - name: Install Certbot and nginx plugin
      apt:
        name:
          - certbot
          - python3-certbot-nginx
        state: present

    - name: Configure Nginx for WordPress with HTTP redirect to HTTPS
      template:
        src: templates/nginx_wordpress_ssl.j2
        dest: /etc/nginx/sites-available/wordpress
      notify: Reload Nginx

    - name: Enable WordPress Nginx site
      file:
        src: /etc/nginx/sites-available/wordpress
        dest: /etc/nginx/sites-enabled/wordpress
        state: link
      notify: Reload Nginx

    - name: Test Nginx configuration
      command: nginx -t
      register: nginx_test
      failed_when: nginx_test.rc != 0
      notify: Reload Nginx

    - name: Wait for Nginx to fully reload
      pause:
        seconds: 5

    - name: Obtain SSL certificate using Certbot
      command: certbot --nginx -d {{ domain }} --non-interactive --agree-tos --email {{ wordpress_admin_email }} -v
      register: certbot_output
      failed_when: certbot_output.rc != 0

    - name: Print Certbot output
      debug:
        var: certbot_output

    - name: Uncomment SSL lines in Nginx configuration
      lineinfile:
        path: /etc/nginx/sites-available/wordpress
        state: present
        backrefs: yes
        regexp: '^(#\s*)?(ssl_certificate|ssl_certificate_key)'
        line: '\1\2'
      notify: Reload Nginx

  handlers:
    - name: Reload Nginx
      service:
        name: nginx
        state: reloaded
