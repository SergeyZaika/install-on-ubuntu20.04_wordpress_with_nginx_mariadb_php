---
- name: Install Second WordPress Site with Nginx, MariaDB, and PHP
  hosts: web_sites
  become: yes
  vars:
    domain: domain.name.net # Replace with the appropriate IP address
    ubuntu_user: ubuntu
    php_version: "8.2"
    db_name: wordpress_second
    db_user: wpuser_second
    db_password: Password
    root_db_password: Password
    wordpress_admin_user: admin
    wordpress_admin_password: Password
    wordpress_admin_email: admin@example.com
    remote_wordpress_file: /tmp/latest.tar.gz
    second_wordpress_install_dir: /var/www/html/second_wordpress_site

  tasks:
    - name: Create MariaDB database for second site
      community.mysql.mysql_db:
        name: "{{ db_name }}"
        state: present
        login_user: root
        login_password: "{{ root_db_password }}"

    - name: Create MariaDB user for second site
      community.mysql.mysql_user:
        name: "{{ db_user }}"
        password: "{{ db_password }}"
        priv: "{{ db_name }}.*:ALL"
        state: present
        login_user: root
        login_password: "{{ root_db_password }}"
        column_case_sensitive: false
      notify: Restart MariaDB

    - name: Download latest WordPress for second site
      get_url:
        url: https://wordpress.org/latest.tar.gz
        dest: "{{ remote_wordpress_file }}"

    - name: Ensure second WordPress install directory exists
      file:
        path: "{{ second_wordpress_install_dir }}"
        state: directory
        owner: www-data
        group: www-data
        mode: '0755'

    - name: Extract WordPress for second site
      unarchive:
        src: "{{ remote_wordpress_file }}"
        dest: "{{ second_wordpress_install_dir }}"
        remote_src: yes
        extra_opts: [ "--strip-components=1" ]

    - name: Set correct permissions for second site
      file:
        path: "{{ second_wordpress_install_dir }}"
        owner: www-data
        group: www-data
        state: directory
        recurse: yes

    - name: Create wp-config.php for second WordPress site
      template:
        src: templates/wp-config_second.j2
        dest: "{{ second_wordpress_install_dir }}/wp-config.php"
        owner: www-data
        group: www-data
        mode: '0644'

    - name: Configure Nginx for second WordPress site (temporary config for Certbot)
      template:
        src: templates/nginx_wordpress.j2
        dest: /etc/nginx/sites-available/second_wordpress_site
      vars:
        domain: plumber.insidenet.net
        php_version: "8.2"
      notify: Reload Nginx

    - name: Enable second WordPress Nginx site
      file:
        src: /etc/nginx/sites-available/second_wordpress_site
        dest: /etc/nginx/sites-enabled/second_wordpress_site
        state: link
      notify: Reload Nginx

    # Test Nginx configuration to ensure it's valid
    - name: Test Nginx configuration
      command: nginx -t
      register: nginx_test
      failed_when: nginx_test.rc != 0
      notify: Reload Nginx

    # Install Certbot and required plugins
    - name: Install Certbot and required plugins
      apt:
        name:
          - certbot
          - python3-certbot-nginx
        state: present

    # Generate SSL options file
    - name: Generate SSL options file
      template:
        src: templates/options-ssl-nginx.conf.j2
        dest: /etc/letsencrypt/options-ssl-nginx.conf

    # Obtain SSL certificate for second site
    - name: Obtain SSL certificate for second site
      command: sudo certbot --nginx -d {{ domain }} --non-interactive --agree-tos --email {{ wordpress_admin_email }}
      register: certbot_output
      failed_when: certbot_output.rc != 0

    - name: Print Certbot output
      debug:
        var: certbot_output

    # Configure Nginx for second WordPress site (final config with SSL)
    - name: Configure Nginx for second WordPress site (final config with SSL)
      template:
        src: templates/nginx_wordpress_ssl_second.j2
        dest: /etc/nginx/sites-available/second_wordpress_site
      notify: Reload Nginx

    # Test Nginx configuration to ensure it's valid after final SSL setup
    - name: Test Nginx configuration (final SSL setup)
      command: nginx -t
      register: nginx_test_final
      failed_when: nginx_test_final.rc != 0
      notify: Reload Nginx

  handlers:
    - name: Reload Nginx
      service:
        name: nginx
        state: reloaded

    - name: Restart MariaDB
      service:
        name: mariadb
        state: restarted
